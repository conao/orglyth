;;; orglyth.el ---                     -*- lexical-binding: t; -*-

;; Copyright (C) 2017 Conao

;; Author: Conao
;; Keywords:

;; This program is free software; you can redistribute it and/or modify
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation, either version 3 of the License, or
;; (at your option) any later version.

;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.

;; You should have received a copy of the GNU General Public License
;; along with this program.  If not, see <http://www.gnu.org/licenses/>.

;;; Commentary:

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;;      Recommended settings below.
;;
;;
;; (use-package el-get :ensure t
;;   :if (or (executable-find "git")
;;           (message "'git' couldn't found.  el-get can't download any packages")
;;           (defmacro el-get (&rest arg) nil))
;;   :config
;;   (setq el-get-git-shallow-clone  t
;;         el-get-emacswiki-base-url "http://www.emacswiki.org/emacs/download/"))
;; 
;; (use-package orglyth
;;     :init (el-get-bundle conao/orglyth)
;;     :config
;;     (use-package orglyth-html
;;       :config
;;       (setq orglyth-html-enable-option    t
;;             orglyth-html-use-ftp          nil
;;             orglyth-html-local-root-path  "~/public_html/orglyth/"
;;             orglyth-html-remote-root-path "~/public_html/remote/"
;;             orglyth-html-ftp-root-path    "/ftp:conao3@conao3.com:~/www/orglyth/")
;;       (orglyth-html-init)
;;       (orglyth-html-project-init)))
;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;;      directory tree
;;
;;
;;  1. Make org file under <root>/src/ folder freely.
;;  2. Make index.org each folder.
;;     You may include `index.inc' generated by orglyth-html.
;;  3. Open some org file in src folder.
;;  4. `C-c C-e P x' to publish orglyth-html project.
;;     `local' to make html files under `orglyth-html-local-root-path' preserve directory structure.
;;     `remote' to make html files under `orglyth-html-remote-root-path' if `orglyth-html-use-ftp' is nil.
;;     `remote' to make html files under `orglyth-html-ftp-root-path' if `orglyth-html-use-ftp' is t.
;;  5. Orglyth-html make category sitemap each folder as `index.inc'.
;;
;;     Orgllyth-html tries to generate the same structure under <root>/html/ as
;;     the <root>/src/ folder.
;;
;;
;;  Create freely under <root>/src directory.
;;  This structure will be the URL path as it is.
;;  <root>/
;;     ├── index.org
;;     ├── parts/
;;     │   └── index.html
;;     └── src/
;;         └── index.org
;;         ├── elisp/
;;         │   ├── index.org
;;         │   ├── boolean.org
;;         │   └── with-temp-file.org
;;         └── emacs/
;;             ├── index.org
;;             ├── install.org
;;             └── org-mode/
;;                 ├── index.org
;;                 ├── basis-syntax.org
;;                 ├── org-list.html
;;                 ├── org-list.org
;;                 └── ox-publish.org
;;
;;  After publish.
;;  <root>/
;;     ├── index.inc
;;     ├── index.org
;;     ├── index.html
;;     ├── parts/
;;     │   └── index.html
;;     ├── src/
;;     │   ├── index.inc
;;     │   ├── index.org
;;     │   ├── elisp/
;;     │   │   ├── index.inc
;;     │   │   ├── index.org
;;     │   │   ├── boolean.org
;;     │   │   └── with-temp-file.org
;;     │   └── emacs/
;;     │       ├── index.inc
;;     │       ├── index.org
;;     │       ├── install.org
;;     │       └── org-mode
;;     │           ├── index.inc
;;     │           ├── index.org
;;     │           ├── basis-syntax.org
;;     │           ├── org-list.html
;;     │           ├── org-list.org
;;     │           └── ox-publish.org
;;     └── archives/
;;         ├── elisp/
;;         │   ├── index.html
;;         │   ├── boolean.html
;;         │   └── with-temp-file.html
;;         └── emacs/
;;             ├── index.html
;;             ├── install.html
;;             └── html-mode/
;;                 ├── index.html
;;                 ├── basis-syntax.html
;;                 ├── html-list.html
;;                 ├── html-list.html
;;                 └── ox-publish.html

;;; Code:

;; variables

(require 'orglyth)
(require 'ox-publish)
(require 'ox-html)
(require 'seml-mode)

(defgroup orglyth-html nil
  "A orglyth-html publish your web site using orgmode."
  :group 'orglyth)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;;  option frags
;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;;  custom variables
;;

(defcustom orglyth-html-init-sexp-string
  "
;; debug config
(setq debug-on-error  t)
(setq init-file-debug t)
(setq custom-file     \"/dev/null\")

;; you can run like 'emacs -q -l ~/hoge/init.el'
(when load-file-name
  (setq user-emacs-directory
        (expand-file-name (file-name-directory load-file-name))))

;; package.el settings
(setq package-archives '((\"melpa\" . \"https://melpa.org/packages/\")
                         (\"gnu\"   . \"https://elpa.gnu.org/packages/\")
                         (\"org\"   . \"https://orgmode.org/elpa/\")))
(package-initialize)

;; use-package install and settings
(unless (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))

(use-package use-package
  :custom ((use-package-expand-minimally t)))

;; org install and settings
(use-package org :ensure t
  :init
  (use-package org-plus-contrib :ensure t :no-require t)
  (use-package htmlize :ensure t)
  :custom
  ((org-html-with-latex          'mathjax)
   (org-html-htmlize-output-type 'css)))
"
  "orglyth-html init sexp as string"
  :group 'orglyth-html
  :type 'string)

(defcustom orglyth-html-source-dir-name "src"
  "orglyth-html source dir name"
  :group 'orglyth-html
  :type 'string)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;;  functions
;;

(provide 'orglyth-html)
;;;orglyth-html.el ends here
