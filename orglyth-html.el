;;; orglyth.el ---                     -*- lexical-binding: t; -*-

;; Copyright (C) 2017 Conao

;; Author: Conao
;; Keywords:

;; This program is free software; you can redistribute it and/or modify
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation, either version 3 of the License, or
;; (at your option) any later version.

;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.

;; You should have received a copy of the GNU General Public License
;; along with this program.  If not, see <http://www.gnu.org/licenses/>.

;;; Commentary:

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;;      Recommended settings below.
;;
;;
;; (use-package el-get :ensure t
;;   :if (or (executable-find "git")
;;           (message "'git' couldn't found.  el-get can't download any packages")
;;           (defmacro el-get (&rest arg) nil))
;;   :config
;;   (setq el-get-git-shallow-clone  t
;;         el-get-emacswiki-base-url "http://www.emacswiki.org/emacs/download/"))
;; 
;; (use-package orglyth
;;     :init (el-get-bundle conao/orglyth)
;;     :config
;;     (use-package orglyth-html
;;       :config
;;       (setq orglyth-html-enable-option    t
;;             orglyth-html-use-ftp          nil
;;             orglyth-html-local-root-path  "~/public_html/orglyth/"
;;             orglyth-html-remote-root-path "~/public_html/remote/"
;;             orglyth-html-ftp-root-path    "/ftp:conao3@conao3.com:~/www/orglyth/")
;;       (orglyth-html-init)
;;       (orglyth-html-project-init)))
;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;;      directory tree
;;
;;
;;  1. Make org file under <root>/src/ folder freely.
;;  2. Make index.org each folder.
;;     You may include `index.inc' generated by orglyth-html.
;;  3. Open some org file in src folder.
;;  4. `C-c C-e P x' to publish orglyth-html project.
;;     `local' to make html files under `orglyth-html-local-root-path' preserve directory structure.
;;     `remote' to make html files under `orglyth-html-remote-root-path' if `orglyth-html-use-ftp' is nil.
;;     `remote' to make html files under `orglyth-html-ftp-root-path' if `orglyth-html-use-ftp' is t.
;;  5. Orglyth-html make category sitemap each folder as `index.inc'.
;;
;;     Orgllyth-html tries to generate the same structure under <root>/html/ as
;;     the <root>/src/ folder.
;;
;;
;;  Create freely under <root>/src directory.
;;  This structure will be the URL path as it is.
;;  <root>/
;;     ├── index.org
;;     ├── parts/
;;     │   └── index.html
;;     └── src/
;;         └── index.org
;;         ├── elisp/
;;         │   ├── index.org
;;         │   ├── boolean.org
;;         │   └── with-temp-file.org
;;         └── emacs/
;;             ├── index.org
;;             ├── install.org
;;             └── org-mode/
;;                 ├── index.org
;;                 ├── basis-syntax.org
;;                 ├── org-list.html
;;                 ├── org-list.org
;;                 └── ox-publish.org
;;
;;  After publish.
;;  <root>/
;;     ├── index.inc
;;     ├── index.org
;;     ├── index.html
;;     ├── parts/
;;     │   └── index.html
;;     ├── src/
;;     │   ├── index.inc
;;     │   ├── index.org
;;     │   ├── elisp/
;;     │   │   ├── index.inc
;;     │   │   ├── index.org
;;     │   │   ├── boolean.org
;;     │   │   └── with-temp-file.org
;;     │   └── emacs/
;;     │       ├── index.inc
;;     │       ├── index.org
;;     │       ├── install.org
;;     │       └── org-mode
;;     │           ├── index.inc
;;     │           ├── index.org
;;     │           ├── basis-syntax.org
;;     │           ├── org-list.html
;;     │           ├── org-list.org
;;     │           └── ox-publish.org
;;     └── archives/
;;         ├── elisp/
;;         │   ├── index.html
;;         │   ├── boolean.html
;;         │   └── with-temp-file.html
;;         └── emacs/
;;             ├── index.html
;;             ├── install.html
;;             └── html-mode/
;;                 ├── index.html
;;                 ├── basis-syntax.html
;;                 ├── html-list.html
;;                 ├── html-list.html
;;                 └── ox-publish.html

;;; Code:

;; variables

(require 'orglyth)
(require 'ox-publish)
(require 'ox-html)

(defgroup orglyth-html nil
  "A orglyth-html publish your web site using orgmode."
  :group 'orglyth)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;;  setter
;;

(defvar orglyth-html-loaded nil
  "Manage orglyth-html loaded.
This variable is internal variable for developer.")

(defun orglyth-html-init-with-setter (var value)
  "orglyth-html reset variables."
  (set var value)
  (when orglyth-html-loaded
    (orglyth-html-init)))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;;  option frags
;;

(defcustom orglyth-html-enable-option nil
  "When non-nil, enable recommended options in ox-html."
  :group 'orglyth-html
  :type 'boolean)

(defcustom orglyth-html-use-ftp nil
  "When non-nil, dest root path will be setted `orglyth-html-ftp-root-path''.

When nil, remote root path will be setted `orglyth-html-remote-root-path'
`sshfs' (if there are not, install console) can mount ssh folder as normal drive.
OS X:
  > brew cask install osxfuse
  > brew install sshfs
  > mkdir sakura
  > sshfs conao3@conao3.sakura.ne.jp:/home/conao3/www/orglyth sakura
  >
  > diskutil unmount sakura    # unmount sshfs"
  :group 'orglyth-html
  :type 'boolean
  :set 'orglyth-html-init-with-setter)

(defcustom orglyth-html-compile-for-pc t
  "Non-nil means compile html for pc."
  :group 'orglyth-html
  :type 'Boolean)

(defcustom orglyth-html-compile-for-amp nil
  "Non-nil means compile html for amp."
  :group 'orglyth-html
  :type 'boolean)

(defcustom orglyth-html-compile-for-mobile nil
  "Non-nil means compile html for mobile."
  :group 'orglyth-html
  :type 'boolean)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;;  custom variables
;;

(defcustom orglyth-html-init-sexp-string
  "
;; debug config
(setq debug-on-error  t)
(setq init-file-debug t)
(setq custom-file     \"/dev/null\")

;; you can run like 'emacs -q -l ~/hoge/init.el'
(when load-file-name
  (setq user-emacs-directory
        (expand-file-name (file-name-directory load-file-name))))

;; package.el settings
(setq package-archives '((\"melpa\" . \"https://melpa.org/packages/\")
                         (\"gnu\"   . \"https://elpa.gnu.org/packages/\")
                         (\"org\"   . \"https://orgmode.org/elpa/\")))
(package-initialize)

;; use-package install and settings
(unless (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))

(use-package use-package
  :custom ((use-package-expand-minimally t)))

;; org install and settings
(use-package org
  :init
  (use-package org-plus-contrib :ensure t :no-require t)
  (use-package htmlize :ensure t))
"
  "orglyth-html init sexp as string"
  :group 'orglyth-html
  :type 'string
  :set #'orglyth-html-init-with-setter)

(defcustom orglyth-html-local-root-path "~/public_html/orglyth/"
  "orglyth-html sorce root path."
  :group 'orglyth-html
  :type 'string
  :set #'orglyth-html-init-with-setter)

(defcustom orglyth-html-remote-root-path "~/public_html/remote/"
  "orglyth-html remote root path"
  :group 'orglyth-html
  :type 'string
  :set #'orglyth-html-init-with-setter)

(defcustom orglyth-html-ftp-root-path "/ftp:example@example.com:~/www/orglyth/"
  "orglyth-html ftp address"
  :group 'orglyth-html
  :type 'string
  :set #'orglyth-html-init-with-setter)

(defcustom orglyth-html-source-dir-name "src"
  "orglyth-html source dir name"
  :group 'orglyth-html
  :type 'string
  :set #'orglyth-html-init-with-setter)

(defcustom orglyth-html-pc-dir-name "archives"
  "orglyth-html export for pc dir name"
  :group 'orglyth-html
  :type 'string
  :set #'orglyth-html-init-with-setter)

(defcustom orglyth-html-amp-dir-name "amp"
  "orglyth-html export for amp dir name"
  :group 'orglyth-html
  :type 'string
  :set #'orglyth-html-init-with-setter)

(defcustom orglyth-html-mobile-dir-name "mobile"
  "orglyth-html export for mobile dir name"
  :group 'orglyth-html
  :type 'string
  :set #'orglyth-html-init-with-setter)

(defcustom orglyth-html-template-dir-name "parts"
  "orgluth-html template dir name"
  :group 'orglyth-html
  :type 'string
  :set #'orglyth-html-init-with-setter)

;; local path
(defvar orglyth-html-local-sorce-path
  (concat orglyth-html-local-root-path orglyth-html-source-dir-name "/")
  "orglyth-html sorce path.")

(defvar orglyth-html-local-pc-path
  (concat orglyth-html-local-root-path orglyth-html-pc-dir-name "/")
  "orglyth-html pc page path")

(defvar orglyth-html-local-amp-path
  (concat orglyth-html-local-root-path orglyth-html-amp-dir-name "/")
  "orglyth-html amp page path")

(defvar orglyth-html-local-mobile-path
  (concat orglyth-html-local-root-path orglyth-html-mobile-dir-name "/")
  "orglyth-html mobile page path (not amp)")

(defvar orglyth-html-template-parts-path
  (concat orglyth-html-local-root-path orglyth-html-template-dir-name "/")
  "orglyth-html template parts path.")

;; remote path
(defvar orglyth-html-remote-sorce-path
  (if orglyth-html-use-ftp
      (concat orglyth-html-ftp-root-path orglyth-html-source-dir-name "/")
    (concat orglyth-html-remote-root-path orglyth-html-source-dir-name "/"))
  "orglyth-html sorce path.")

(defvar orglyth-html-remote-pc-path
  (if orglyth-html-use-ftp
      (concat orglyth-html-ftp-root-path orglyth-html-pc-dir-name "/")
    (concat orglyth-html-remote-root-path orglyth-html-pc-dir-name "/"))
  "orglyth-html pc page path")

(defvar orglyth-html-remote-amp-path
  (if orglyth-html-use-ftp
      (concat orglyth-html-ftp-root-path orglyth-html-amp-dir-name "/")
    (concat orglyth-html-remote-root-path orglyth-html-amp-dir-name "/"))
  "orglyth-html amp page path")

(defvar orglyth-html-remote-mobile-path
  (if orglyth-html-use-ftp
      (concat orglyth-html-ftp-root-path orglyth-html-mobile-dir-name "/")
    (concat orglyth-html-remote-root-path orglyth-html-mobile-dir-name "/"))
  "orglyth-html mobile page path (not amp)")

(defvar orglyth-html-preamble-format '(("ja" "
<div align=right>
初稿: %d
</div>
<div align=right>
最終更新日: %C
</div>

<div align=right>
<a href=\"http://conao3.com/\">ホーム</a> |
<a href=\"index.html\">文書トップ</a> | <a href=\"sitemap.html\">目次</a>
</div>
")))

(defvar orglyth-html-head-extra "
<link rel=\"stylesheet\" type=\"text/css\" href=\"/parts/default.css\">")

(defvar orglyth-html-postamble-format '(("ja" "
<p class=\"author\">Author: %a</p>
<p class=\"date\">Date: %d</p>
<p class=\"creator\">%c</p>")))

(defvar orglyth-html-footnotes-section "
<div id=\"footnotes\">
<h2 class=\"footnotes\">%s: </h2>
<div id=\"text-footnotes\">
%s
</div>
</div>")

(defvar orglyth-html-default-html-option
  `("default"
    ;; https://orgmode.org/manual/Publishing-options.html#Publishing-options
    :language "ja"
    :html-checkbox-type unicode
    :html-doctype "html5"
    :html-footnotes-section ,orglyth-html-footnotes-section
    ;; :html-footnote-format
    :html-head-include-default-style nil
    :html-head-include-scripts nil
    :html-head-extra ,orglyth-html-head-extra
    :html-preamble-format ,orglyth-html-preamble-format
    :html-postamble-format ,orglyth-html-postamble-format))

(defvar orglyth-html-default-org-option
  `("default"
    ;; https://orgmode.org/manual/Selecting-files.html#Selecting-files
    :recursive t

    ,@(cdr orglyth-html-default-html-option)
    
    :base-extension "org"
    :style ""
    :auto-sitemap t
    :sitemap-filename "sitemap.inc"
    :makeindex t
    :section-numbers t

    ;; https://orgmode.org/manual/Publishing-action.html#Publishing-action
    :publishing-function org-html-publish-to-html)
  "default options fot orglyth-html")

(defvar orglyth-html-default-resources-option
  `("default"
    :recursive t
    :base-extension "jpg\\|gif\\|png\\|css"
    :publishing-function org-publish-attachment))

(defvar orglyth-html-default-index-option
  `("default"
    ,@(cdr orglyth-html-default-html-option)

    :auto-sitemap nil
    :base-extension "org"
    ;; :preparation-function orglyth-html-create-root-index-org
    :publishing-function org-html-publish-to-html))

(defun orglyth-html-project-init ()
  "Add orglyth-html project to org-publish-project-alist."
  (orglyth-add-list-to-list
   'org-publish-project-alist
   ;; http://technohabits.blogspot.com/2013/01/org-modepublishingweb.html
   `(
     ;; 検証用
     ("local-rootindex"
      :base-directory ,orglyth-html-local-root-path
      :publishing-directory ,orglyth-html-local-root-path
      ,@(cdr orglyth-html-default-index-option))
     ("local-orgfiles"
      :base-directory ,orglyth-html-local-sorce-path
      :publishing-directory ,orglyth-html-local-pc-path
      ,@(cdr orglyth-html-default-org-option))
     ("local-resources"
      :base-directory ,orglyth-html-local-sorce-path
      :publishing-directory ,orglyth-html-local-pc-path
      ,@(cdr orglyth-html-default-resources-option))
     ("local" :components ("local-rootindex" "local-orgfiles" "local-resources"))

     ;; 本番用
     ("web-rootindex"
      :base-directory ,orglyth-html-local-root-path
      :publishing-directory ,orglyth-html-remote-root-path
      ,@(cdr orglyth-html-default-index-option))
     ("web-orgfiles"
      :base-directory ,orglyth-html-local-sorce-path
      :publishing-directory ,orglyth-html-remote-pc-path
      ,@(cdr orglyth-html-default-org-option))
     ("web-resources"
      :base-directory ,orglyth-html-local-sorce-path
      :publishing-directory ,orglyth-html-remote-pc-path
      ,@(cdr orglyth-html-default-resources-option))
     ("web-copyorg"
      :base-directory ,orglyth-html-local-sorce-path
      :publishing-directory ,orglyth-html-remote-sorce-path
      :recursive t
      :base-extension "org"
      :publishing-function org-publish-attachment)
     ("website" :components ("web-rootindex" "web-orgfiles" "web-resources" "web-copyorg")))))

(defun orglyth-html-init ()
  "Init, reset orglyth-html internal variables."
  (setq orglyth-html-local-sorce-path
        (concat orglyth-html-local-root-path orglyth-html-source-dir-name "/")

        orglyth-html-local-pc-path
        (concat orglyth-html-local-root-path orglyth-html-pc-dir-name "/")

        orglyth-html-local-amp-path
        (concat orglyth-html-local-root-path orglyth-html-amp-dir-name "/")

        orglyth-html-local-mobile-path
        (concat orglyth-html-local-root-path orglyth-html-mobile-dir-name "/")

        orglyth-html-template-parts-path
        (concat orglyth-html-local-root-path orglyth-html-template-dir-name "/")

        ;; remote path
        orglyth-html-remote-sorce-path
        (if orglyth-html-use-ftp
            (concat orglyth-html-ftp-root-path orglyth-html-source-dir-name "/")
          (concat orglyth-html-remote-root-path orglyth-html-source-dir-name "/"))

        orglyth-html-remote-pc-path
        (if orglyth-html-use-ftp
            (concat orglyth-html-ftp-root-path orglyth-html-pc-dir-name "/")
          (concat orglyth-html-remote-root-path orglyth-html-pc-dir-name "/"))

        orglyth-html-remote-amp-path
        (if orglyth-html-use-ftp
            (concat orglyth-html-ftp-root-path orglyth-html-amp-dir-name "/")
          (concat orglyth-html-remote-root-path orglyth-html-amp-dir-name "/"))

        orglyth-html-remote-mobile-path
        (if orglyth-html-use-ftp
            (concat orglyth-html-ftp-root-path orglyth-html-mobile-dir-name "/")
          (concat orglyth-html-remote-root-path orglyth-html-mobile-dir-name "/")))
  
  (when orglyth-html-enable-option
    (setq org-html-with-latex                 'mathjax
          org-html-htmlize-output-type        'css
          org-html-coding-system              'utf-8
          org-publish-timestamp-directory     (concat org-directory ".org-timestamps/")
          )
    (setq org-html-mathjax-options
          '((path "https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS_HTML")
            (scale "100")
            (align "center")
            (font "TeX")
            (linebreaks "false")
            (autonumber "AMS")
            (indent "0em")
            (multlinewidth "85%")
            (tagindent ".8em")
            (tagside "right")))

    (setq org-html-mathjax-template
          "<script type=\"text/x-mathjax-config\">
    MathJax.Hub.Config({
        displayAlign: \"%ALIGN\",
        displayIndent: \"%INDENT\",

        \"HTML-CSS\": { scale: %SCALE,
                        linebreaks: { automatic: \"%LINEBREAKS\" },
                        webFont: \"%FONT\"
                       },
        SVG: {scale: %SCALE,
              linebreaks: { automatic: \"%LINEBREAKS\" },
              font: \"%FONT\"},
        NativeMML: {scale: %SCALE},
        TeX: { equationNumbers: {autoNumber: \"%AUTONUMBER\"},
               MultLineWidth: \"%MULTLINEWIDTH\",
               TagSide: \"%TAGSIDE\",
               TagIndent: \"%TAGINDENT\"
             }
});
</script>
<script type=\"text/javascript\"
        src=\"%PATH\"></script>")))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;;  functions
;;


;; turn on frg, loaded.
(setq orglyth-html-loaded t)

(provide 'orglyth-html)
;;;orglyth-html.el ends here
